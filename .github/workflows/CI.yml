name: CI

on: push

  #pull_request:
    #branches: [ "main" ]

permissions:
  contents: read

jobs:
  Lint:
    name: Run Linter
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
        cache: "pip"
        
    - name: Get changed directories
      id: changed-dir
      uses: tj-actions/changed-files@v29.0.1
      with:
        dir_names: true
      
    - name: Lint changed directories with flake8
      run: |
        pip install flake8 
        for dir in ${{ steps.changed-dir.outputs.all_changed_files }}; do
          echo "$dir was changed"
          # stop the build if there are Python syntax errors or undefined names
          flake8 $dir --count --select=E9,F63,F7,F82 --show-source --statistics --filename *.py
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 $dir --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --filename *.py
        done
        
      
#   Test-Docker-Hub-Marqo:
#     name: Test docker hub marqo  
#     runs-on: ubuntu-latest
#     steps:
    
#       - uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
        
#       - name: Run marqo-os
#         run: |
#            docker run --name marqo-os -id -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" marqoai/marqo-os:0.0.2

#       - name: Pull and run marqo
#         run: |
#           # docker run --name marqo --privileged -p 8882:8882 --add-host host.docker.internal:host-gateway marqoai/marqo:0.0.3 &
#           docker run --name marqo --privileged -p 8882:8882 --add-host host.docker.internal:host-gateway -e "OPENSEARCH_URL=https://localhost:9200" marqoai/marqo:0.0.3 &
#           until [[ $(curl -v --silent --insecure http://localhost:8882 2>&1 | grep marqo) ]]; do
#           sleep 0.1;
#           done;
#           docker ps -a
          
#       - name: Run unit tests
#         run: |
#           pip install tox
#           tox
          
          
#   Test-Github-Marqo:
#     name: Test github marqo  
#     runs-on: ubuntu-latest
#     steps:

#       - uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
        
#       - name: Run marqo-os
#         run: |
#            docker run --name marqo-os -id -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" marqoai/marqo-os:0.0.2

#       - name: Build marqo
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           builder: ${{ steps.buildx.outputs.name }}
#           push: false
#           load: true
#           tags: marqo_docker_0
#           cache-from: type=gha
#           cache-to: type=gha,mode=max
#           platforms: linux/amd64
          
#       - name: Run marqo
#         run: |
#           # DOCKER_BUILDKIT=1 docker build . -t marqo_docker_0 
#           docker run --name marqo --privileged -p 8882:8882 --add-host host.docker.internal:host-gateway -e "OPENSEARCH_URL=https://localhost:9200" marqo_docker_0 &
#           until [[ $(curl -v --silent --insecure http://localhost:8882 2>&1 | grep marqo) ]]; do
#           sleep 0.1;
#           done;
#           docker ps -a
          
#       - name: Run unit tests
#         run: |
#           pip install tox
#           tox
          

  Integration-Test-Github-Marqo:
    name: Integration Test github marqo  
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
          
      - uses: actions/checkout@v3
        with:
          repository: marqo-ai/marqo-api-tests
       
      - name: add conf file
        run: echo 'export MARQO_API_TESTS_ROOT="."' >> conf
          
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          cache: "pip"
          
      - name: Run integration tests
        run: |
          pip install tox
          tox -e py3-localos

