name: CI

on:
  push:
    branches:
      - CI-test #try

  #pull_request:
    #branches: [ "main" ]

permissions:
  contents: read

jobs:
  Lint:
    name: Run Linter
    runs-on: ubuntu-latest
    environment: production-test #change-name

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
        cache: "pip"
        
    - name: Get Changed Directories
      id: changed-dir
      uses: tj-actions/changed-files@v29.0.1
      with:
        dir_names: true
      
    - name: Lint Changed Directories with flake8
      run: |
        pip install flake8 
        for dir in ${{ steps.changed-dir.outputs.all_changed_files }}; do
          echo "$dir was changed"
          # stop the build if there are Python syntax errors or undefined names
          flake8 $dir --count --select=E9,F63,F7,F82 --show-source --statistics --filename *.py
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 $dir --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --filename *.py
        done


  Test-Marqo:
    name: Run Marqo Test Suite
    runs-on: ubuntu-latest
    environment: production-test #change-name
    steps:
       
      - uses: actions/checkout@v3
        with:
          repository: marqo-ai/marqo
          
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          cache: "pip"
          
      - name: Install Dependencies
        run: pip install -r requirements.txt 
        
      - uses: actions/checkout@v3
        with:
          repository: marqo-ai/marqo-api-tests
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
          
      - name: Set up Environment
        run: |
          # Set up conf file
          echo 'export MARQO_API_TESTS_ROOT="/home/runner/work/marqo_CI/marqo_CI"' >> conf
          echo 'export S2SEARCH_URL="${{ secrets.S2SEARCH_URL }}"' >> conf
          # Run docker without sudo
          sudo gpasswd -a $USER docker
          sudo service docker restart
        
      - name: Run Integration Tests - local_os
        run: tox -e py3-local_os
        
      - name: Run Integration Tests - dind_os
        run: tox -e py3-dind_os
        
      - name: Run Integration Tests - s2search
        run: tox -e py3-s2search
        
      - name: Run Unit Tests
        run: tox -e py3-local_os_unit_tests

